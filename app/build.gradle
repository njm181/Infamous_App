plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'org.jetbrains.kotlin.android'
}
apply plugin: 'kotlin-android'
apply plugin: "androidx.navigation.safeargs.kotlin"


def API_KEY = '"' + ApiKey + '"' ?: '"Api key not found"'
def STRING = 'String'
def URL_BASE = '"' + UrlBase + '"' ?: '"Url base not found"'
def URL_GENRES = '"' + UrlGenres + '"' ?: '"Url Genres base not found"'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.njm.infamous"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        each{type ->
            type.buildConfigField STRING, 'ApiKey', API_KEY
            type.buildConfigField STRING, 'UrlBase', URL_BASE
            type.buildConfigField STRING, 'UrlGenres', URL_GENRES

        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/src/main/assets/schemas".toString(),
                        "room.incremental": "true"
                ]
            }
        }
    }
    //https://developer.android.com/studio/build/gradle-tips
    buildTypes {
        release {
            // These values are defined only for the release build, which
            // is typically used for full builds and continuous builds.
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        //debug{
        // Use static values for incremental builds to ensure that
        // resource files and BuildConfig aren't rebuilt with each run.
        // If these rebuild dynamically, they can interfere with
        // Apply Changes as well as Gradle UP-TO-DATE checks.
        //buildConfigField 'String', 'BASE_URL', "\"https://api.themoviedb.org/3/tv\""
        //buildConfigField 'String', 'API_KEY', "4fbbfb95fd67fcf0bbe6e465287efc21"
        //}
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.4.30'
    }

    viewBinding {
        enabled = true
    }
}

dependencies {
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha03"

    implementation 'com.google.android.material:material:1.3.0'

    //manejar images desde url con glide. Hasta que la libreria saque soporte para compose
    implementation "dev.chrisbanes.accompanist:accompanist-glide:0.6.2"

    implementation 'androidx.appcompat:appcompat:1.3.0-beta01'

    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha02"

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit: 2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    //coroutinas
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //koin DI
    def koin_version = "2.2.2"
    implementation "org.koin:koin-android:$koin_version"  // Koin for Android
    implementation "org.koin:koin-androidx-viewmodel:$koin_version" // Koin for viewmodel feature
    // Koin testing tools
    testImplementation "org.koin:koin-test:$koin_version"
    //viewmodel ktx
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    //livedata ktx
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0"
    //lifecycle ktx
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.0"
    //fragment ktx
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    implementation "androidx.core:core-ktx:1.3.2"

    def room_version = "2.2.6"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    //Jetpack Compose
    def nav_version = "2.3.3"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0'
    implementation 'androidx.activity:activity-compose:1.3.0-alpha03'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
